#!/bin/bash

default='\[\e[39m\]'
red='\[\e[31m\]'

default_alt='\x01\e[39m\x02'
red_alt='\x01\e[31m\x02'
yellow_alt='\x01\e[33m\x02'
blue_alt='\x01\e[34m\x02'

bold='\[\e[1m\]'
normal='\[\e[0m\]'

__check_git_repo() {
  git rev-parse --git-dir --is-inside-git-dir --is-bare-repository > /dev/null 2>&1
}

__check_git_repo_nonempty() {
  git rev-parse HEAD > /dev/null 2>&1
}

__git_current_branch() {
  git symbolic-ref --short HEAD
}

__git_current_remote_track() {
  git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)"
}

__git_current_remote_count() {
  if git rev-parse --abbrev-ref @{upstream} >/dev/null 2>&1; then
    read -r behind ahead < <(git rev-list --left-right --count @{upstream}...HEAD 2>/dev/null | awk '{print $1, $2}')
    out=""
    [ "${ahead:-0}"  -gt 0 ]  && out="${out}ahead ${ahead}"
    [ "${behind:-0}" -gt 0 ]  && out="${out}${out:+, }behind ${behind}"
    [ -n "$out" ] && printf '[%s]' "$out"
  fi
}

__git_track() {
  if __check_git_repo; then
    remote="$(__git_current_remote_track)"
    if [ -n "${remote}" ]; then
      count="$(__git_current_remote_count)"
      printf -- " tracking ${red_alt}%s${default_alt} %s" "${remote}" "${count}"
    fi
  fi
}

__git_changes() {
  if __check_git_repo; then
    changes="$(git status -s)"
    if [ -n "${changes}" ]; then
      # shellcheck disable=SC2059
      printf -- "${blue_alt}?"
    fi
  fi
}

__git_branch() {
  if __check_git_repo; then
    branch="$(__git_current_branch)"
    if [ -n "${branch}" ]; then
      printf -- "${yellow_alt}:${red_alt}%s${default_alt}" "${branch}"
    fi
  fi
}


PS1="${bold}${red}\w${default}\$(__git_track)${normal}\n${bold}\W\$(__git_branch)\$(__git_changes)${default} \$ ${normal}"
export PS1
